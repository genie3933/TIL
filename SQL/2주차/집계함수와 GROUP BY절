- 집계 쿼리
- GROUP BY 절
- 집계 함수
- HAVING 절
- DISTINCT
- ROLLUP과 CUBE

---

## 집계 쿼리

- GROUP BY절과 집계함수를 사용한 쿼리를 집계쿼리라고 한다
- 특정 컬럼별 최소, 최대, 평균값 등을 산출함으로써 기본적인 데이터 분석에 사용된다
- GROUP BY절과 집계함수는 단독으로 사용할 수 있지만 일반적으로는 같이 사용한다

## GROUP BY절

- 데이터들을 여러 그룹으로 나눠주는 역할을 한다
- GROUP BY절에 기술한 컬럼이나 표현식 별로 데이터가 집계된다
- WHERE절과 ORDER BY절 사이에 위치한다
- 구문은 다음과 같다

```sql
select expr1, expr2, ...
from ...
where...
group by expr1, expr2, ...
order by ...;
```

- 주의할점은 GROUP BY절에 기술한 컬럼이나 표현식 이외의 항목은 SELECT 절에 명시가 불가능하다는 것이다 (단, 집계함수는 가능)
- GROUP BY절에는 별칭을 기술해서는 안되며 SELECT절에 기술한 형태 그대로 사용해야 한다
- GROUP BY절과 집계 함수를 함께 사용해야 보통 의미있는 결과를 도출 할 수 있다

## 집계함수

- 여러 건의 데이터를 집계 연산한 결과를 반환하는 함수
- COUNT(expr): expr의 전체 개수를 반환. 보통 expr에는 * 을 사용한다

    이 경우, null값도 같이 세준다

    MAX(expr): expr의 최댓값 반환

    MIN(expr): expr의 최솟값 반환

    SUM(expr): expr의 합계 반환

    AVG(expr): expr의 평균값 반환

    VARIANCE(expr): expr의 분산 반환

    STDDEV(expr): expr의 표준편차 반환

- GROUP BY절 없이 집계함수만 사용할 경우 데이터 전체에 대한 집계 값을 계산한다
- 매개변수 (*)는 COUNT 집계함수에서만 사용한다
- 집계함수(그룹함수)는 WHERE절에서 사용이 불가능하다

## HAVING절

- 집계함수 반환값에 대한 조건을 걸 때 사용한다
- 우리가 사용하는 쿼리의 일반적인 조건을 WHERE절에 기술한다고 하면, 집계쿼리에 대한 조건은 HAVING절에 입력하는 것이다
- EX) 한 반에서 과목별 평균점수가 60점 이상인 과목 조회

    SELECT SUBJECT

    FROM ~

    GROUP BY SUBJECT

    HAVING AVG(SUBJECT) >= 60;

- GROUP BY절 뒤에 온다

## DISTINCT

- DISTINCT 뒤에 명시한 표현식(컬럼)의 고유한 값만을 조회할 때 사용한다 (중복값 제외)
- 구문 형식

    SELECT DISTINCT expr1, expr2, ...

    FROM ~

- 중복값을 제외하기 때문에 집계함수 없이 GROUP BY절을 사용한 것과 동일한 효과를 가진다

## ROLLUP과 CUBE

- ROLLUP도 그룹함수로, ROLLUP을 사용하면 그룹한 값 뿐만 아니라 소계까지 알 수 있다
- 구문 형식

    SELECT COL1, COL2, SUM(COL3)

    FROM TABLE1

    GROUP BY ROLLUP(COL1, COL2)...

    → COL1에 대한 소계, (COL1, COL2) 합계, 전체 합계 계산

    → 때문에 입력 순서가 중요하다

    → 만약 COL2, COL1이었다면 결과가 COL2에 대한 소계, (COL2, COL1) 합계, 전체 합계 이었을 것이다

- 반면 CUBE는 모든 가능한 조합에 대한 소계를 하므로 입력 순서가 상관없다
- 구문 형식

    SELECT COL1, COL2, SUM(COL3)

    FROM TABLE1

    GROUP BY CUBE(COL1, COL2) ...

    → COL1소계, COL2소계, (COL1, COL2) 합계, 전체 합계가 결과로 나온다
