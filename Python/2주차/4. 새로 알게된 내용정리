- .unstack() 함수: 인덱스를 컬럼으로 만들어준다
- scatterplot과 stripplot의 차이점?

    scatterplot: 수치형 변수를 데이터로 할 경우 데이터의 분포를 한 눈에 파악할 수 있는 그래프

    stripplot: 중복된 값들을 동일한 위치가 아닌 옆으로 퍼트려서 그려주는 그래프로 중복된 값을 한 눈에 파악할 수 있게 해준다

- map 함수

    : map(함수, 리스트)

    : 리스트로부터 원소를 하나씩 꺼내서 함수를 적용시킨 후 그 결과를 새로운 리스트에 담아준다

- astype(str)을 통해 수치데이터를 문자데이터로 변환할 수 있다
- 슬라이싱 개념
- 리스트컴프리헨션 개념

    : 반복문을 좀 더 편리하게 사용

    : df_list = [i for i in df]

- 멀티인덱스 인덱싱

    멀티인덱스의 경우 말 그대로 인덱스가 여러개 이기 때문에 loc를 통해 하나의 인덱스를 풀어도 그 속에 또 인덱스가 존재하게 된다
    
    - 빈도수 구하기

    한 개의 변수: series.value_counts( )

    두 개의 변수: pd.crosstab( )

- value_counts 함수에서 normalize=True 옵션: 비율을 알 수 있다
- unique( )와 nunique의 차이?

    unique( ): 유일값들을 나열

    nunique( ): 유일값들의 수를 세준다

- .set_index(col): col을 인덱스로 만들어준다 (인덱스 값 변경)
- .sort_index( ): 인덱스 값을 기준으로 정렬해준다
- Pandas의 attributes: shape, dtypes, index, columns
- .dt.day_name(): 영문요일로 변경

    .dt.year: 연도만 가져오기

    .dt.month: 월만 가져오기

    .dt.day: 일만 가져오기

    .dt.dayofweek: 요일에 해당하는 숫자 가져오기

- numpy의 cumsum함수: 원소의 누적합을 계산한다
- 결측값 채우기

```python
# 결측값을 앞 방향 혹은 뒷 방향으로 채우기
# 앞방향: fillna(method='ffill' or 'pad')
# 뒷방향: fillna(method='bfill' or 'backfill')

# 앞방향 예제
In [10]: df
Out[10]:

          C1        C2        C3
0       NaN -0.228791 -0.850988
1       NaN  0.564767       NaN
2 -0.834515       NaN -0.566917
3  0.242694       NaN -0.673298
4 -0.497041 -0.301435       NaN

In [15]: df.fillna(method='ffill') # Fill values forward
Out[15]:

         C1        C2        C3
0       NaN -0.228791 -0.850988
1       NaN  0.564767 -0.850988
2 -0.834515  0.564767 -0.566917
3  0.242694  0.564767 -0.673298
4 -0.497041 -0.301435 -0.673298

# 뒷방향 예제
In [10]: df
Out[10]:

         C1        C2        C3
0       NaN -0.228791 -0.850988
1       NaN  0.564767       NaN
2 -0.834515       NaN -0.566917
3  0.242694       NaN -0.673298
4 -0.497041 -0.301435       NaN

 

In [17]: df.fillna(method='bfill') # Fill values backward
Out[17]:

         C1        C2        C3
0 -0.834515 -0.228791 -0.850988
1 -0.834515  0.564767 -0.566917
2 -0.834515 -0.301435 -0.566917
3  0.242694 -0.301435 -0.673298
4 -0.497041 -0.301435       NaN

In [18]: df.fillna(method='backfill') # Fill values backward
Out[18]:

         C1        C2        C3
0 -0.834515 -0.228791 -0.850988
1 -0.834515  0.564767 -0.566917
2 -0.834515 -0.301435 -0.566917
3  0.242694 -0.301435 -0.673298
4 -0.497041 -0.301435       NaN

출처: https://rfriend.tistory.com/262 [R, Python 분석과 프로그래밍의 친구 (by R Friend)]
```

- 전치 개념 → df.T.plot( )

    시각화 시에 전치를 사용하여 행과 열을 바꿀 수 있다

- .loc[조건, 열] ⇒ 조건에 맞는 열을 가져온다
- 시리즈 형태의 요약값은 describe( )로 알 수 있다
- csv 파일 읽기 / 불러오기

    csv 파일을 pandas의 데이터 프레임으로 불러오려면 pd.read_csv("파일경로")를 사용하면 된다

    csv 파일로 저장하려면 df.to_csv("파일경로", index 옵션)을 사용하면 된다

    저장시 index=False옵션은 인덱스를 포함하지 않고 csv 파일을 저장해주는 역할을 한다
